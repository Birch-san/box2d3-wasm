# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Build box2d3-wasm

on:
  workflow_dispatch:
    inputs:
      mode:
        description: 'Build mode'
        required: true
        type: choice
        options:
          - debug
          - relwithdebinfo
          - release
      action:
        description: 'Package action'
        required: true
        type: choice
        options:
          - pack
          - publish
        default: publish
      version_type:
        description: '[if publish] Version bump'
        required: true
        type: choice
        options:
          - major
          - minor
          - patch
        default: patch

env:
  EM_VERSION: 3.1.73
  EM_CACHE_FOLDER: 'emsdk-cache'

jobs:
  build:
    runs-on: ubuntu-latest
    # Only use release environment if we're publishing
    environment: ${{ (github.event.inputs.action == 'publish' && github.event.inputs.mode == 'release') && 'release' || '' }}
    permissions:
      contents: write  # this permission is only exercised in mode == 'release'
      id-token: write  # for npm publish --provenance # https://docs.npmjs.com/generating-provenance-statements
    steps:
      # - name: validate inputs
      #   run: |
      #     if [ "${{ github.event.inputs.action }}" = "publish" ] && [ "${{ github.event.inputs.mode }}" != "release" ]; then
      #       echo "::error::Publish action is only allowed in release mode"
      #       exit 1
      #     fi
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: setup cache
        id: cache-system-libraries
        uses: actions/cache@v4
        with:
          path: ${{env.EM_CACHE_FOLDER}}
          key: ${{env.EM_VERSION}}-${{ runner.os }}
      - uses: mymindstorm/setup-emsdk@v14
        with:
          version: ${{env.EM_VERSION}}
          actions-cache-folder: ${{env.EM_CACHE_FOLDER}}
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org"
          scope: ''
      - name: git status
        working-directory: box2d3-wasm
        run: git status
      - name: install global deps
        run: npm i -g typescript yarn
      - name: git status
        working-directory: box2d3-wasm
        run: git status
      - name: install local deps
        run: npm ci
        working-directory: box2d3-wasm
      - name: git status
        working-directory: box2d3-wasm
        run: git status
      - name: set build type
        id: build-type
        run: |
          if [ "${{ github.event.inputs.mode }}" = "debug" ]; then
            echo "target_type=Debug" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.inputs.mode }}" = "relwithdebinfo" ]; then
            echo "target_type=RelWithDebInfo" >> $GITHUB_OUTPUT
          else
            echo "target_type=Release" >> $GITHUB_OUTPUT
          fi
      - name: build makefile
        working-directory: box2d3-wasm
        run: shell/0_build_makefile.sh
        env:
          FLAVOUR: simd
          TARGET_TYPE: ${{ steps.build-type.outputs.target_type }}
      - name: emmake
        working-directory: box2d3-wasm
        run: emmake make -j8 -C cmake-build
      - name: build wasm
        working-directory: box2d3-wasm
        run: shell/1_build_wasm.sh
        env:
          FLAVOUR: simd
          TARGET_TYPE: ${{ steps.build-type.outputs.target_type }}
      - name: configure git
        if: github.event.inputs.action == 'publish'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
      - name: git status
        working-directory: box2d3-wasm
        run: git status
      - name: version and tag
        if: github.event.inputs.action == 'publish'
        id: versioning
        working-directory: box2d3-wasm
        run: |
          NEW_VERSION=$(npm version ${{ github.event.inputs.version_type }} --git-tag-version -m "release %s [skip ci]")
          # Remove the 'v' prefix
          NEW_VERSION=${NEW_VERSION#v}
          echo "version=${NEW_VERSION}" >> $GITHUB_OUTPUT
      - name: wtf is going on
        if: github.event.inputs.action == 'publish'
        working-directory: box2d3-wasm
        run: |
          npm config get git-tag-version
          npm config get commit-hooks
          git remote -v
          git status
          git log
          git diff -- package-lock.json